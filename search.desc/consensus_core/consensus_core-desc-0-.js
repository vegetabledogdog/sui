searchState.loadedDescShard("consensus_core", 0, "Digest of a consensus commit.\nIndex of a commit among all consensus commits.\nUniquely identifies a commit with its index and digest.\nThe output of consensus to execution is an ordered list of …\nExported consensus API. ConsensusAuthority is used by Sui …\nLexicographic min &amp; max digest.\nRound number of a block.\nExported API for testing. Creates fake blocks for testing. …\nExported API for testing. Sui transaction in serialised …\nIndex of a transaction in a block.\n<code>TransactionVerifier</code> implementation is supplied by Sui to …\nExported API for testing. VerifiedBlock allows full access …\nAll the committed blocks that are part of this sub-dag\nThe reference of the commit. First commit after genesis …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA reference to the leader of the sub-dag\nCreates a new committed sub dag.\nThis method is public for testing in other crates.\nReturns reference to the block.\nOptional scores that are provided as part of the consensus …\nSubmits a list of transactions to be sequenced. The method …\nThe timestamp of the commit, obtained from the timestamp …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nDetermines if this batch of transactions is valid. Fails …\nReturns indices of transactions to reject. Currently only …")